/************************************
 *
 * File : printD.cic
 * Date : Nov 7, 2022 3:21 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////
#include <iostream>

// ##DEFINE_SECTION::START
// ##DEFINE_SECTION::END

typedef struct _ControlVelocity{
    double linear_x;
    double angular_z;
} ControlVelocity;


TASK_CODE_BEGIN

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_direction;
// ##DEFINE_PORT_SECTION::END

// ##DEFINE_MULTICAST_PORT_SECTION::START
// ##DEFINE_MULTICAST_PORT_SECTION::END

/////////////////////////////////////
// init code
/////////////////////////////////////

TASK_INIT
{
// ##INIT_PORT_SECTION::START
    port_direction = PORT_INITIALIZE(TASK_ID, "direction");
// ##INIT_PORT_SECTION::END

// ##INIT_MULTICAST_PORT_SECTION::START
// ##INIT_MULTICAST_PORT_SECTION::END

    // TODO: task initialize code

}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{
    // TODO: task main code
    int dataWritten;
    int direction = 0;
    static ControlVelocity vel = {0, 0};
    UFPort_ReadFromQueue(port_direction, (unsigned char *)&vel, sizeof(ControlVelocity), 0 , &dataWritten);    
    
    std::cout << "printD" << std::endl;
    std::cout << vel.linear_x <<'\t' << vel.angular_z << std::endl;

}



/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code

}

TASK_CODE_END
