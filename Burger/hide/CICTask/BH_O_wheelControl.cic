/************************************
 *
 * File : wheelControl.cic
 * Date : May 18, 2022 3:10 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////
#include <inttypes.h>
#include <DynamixelSDK.h>

// ##DEFINE_SECTION::START
// ##DEFINE_SECTION::END


TASK_CODE_BEGIN

/*******************************************************************************
* Declaration for Hardware Timer (Interrupt control)
*******************************************************************************/

/*******************************************************************************
* Declaration for motor
*******************************************************************************/

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_direction;
// ##DEFINE_PORT_SECTION::END

// ##DEFINE_MULTICAST_PORT_SECTION::START
// ##DEFINE_MULTICAST_PORT_SECTION::END


/////////////////////////////////////
// init code
/////////////////////////////////////

#define LINEAR                           0
#define ANGULAR                          1


TASK_INIT
{
// ##INIT_PORT_SECTION::START
    port_direction = PORT_INITIALIZE(TASK_ID, "direction");
// ##INIT_PORT_SECTION::END

// ##INIT_MULTICAST_PORT_SECTION::START
// ##INIT_MULTICAST_PORT_SECTION::END

    // TODO: task initialize code

    initTurtleBotMotor();
}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{
    // TODO: task main code
    int dataWritten;
    int direction;
    uem_result result;

    result = UFPort_ReadFromQueue(port_direction, (unsigned char *)&direction, sizeof(int), 0 , &dataWritten);    
    if(result == ERR_UEM_NOERROR) { 
        goal_velocity[LINEAR]  = 0;
        goal_velocity[ANGULAR]  = 0;
        motorSet = 1;
    }
}


/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code

}

TASK_CODE_END
