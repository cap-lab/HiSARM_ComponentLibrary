/************************************
 *
 * File : Turtlebot3_ledControl
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////
#include "semo_led.h"

TASK_CODE_BEGIN

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int group_led;
STATIC int port_led;
STATIC int group_ledControl;
STATIC int port_ledControl;
// ##DEFINE_PORT_SECTION::END


/////////////////////////////////////
// init code
/////////////////////////////////////

TASK_INIT
{
// ##INIT_PORT_SECTION::START
    UFMulticastPort_Initialize(TASK_ID, "ledControl", &group_ledControl, &port_ledControl);
    UFMulticastPort_Initialize(TASK_ID, "led", &group_led, &port_led);
// ##INIT_PORT_SECTION::END
    
    // TODO: task initialize code
}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{
    int command;
    SEMO_LED led;
    int dataNum;
    uem_result result;
    result = UFMulticastPort_ReadFromBuffer(group_ledControl, port_ledControl, (unsigned char *)&command, sizeof(int), &dataNum);
    ERRIFGOTO(result, EXIT_);
    led.left = command;
    led.right = command;
    result = UFMulticastPort_WriteToBuffer(group_led, port_led, (unsigned char *)&led, sizeof(SEMO_LED), &dataNum);
EXIT_:
    if(result != ERR_UEM_NOERROR) {
        SEMO_LOG_ERROR("communication error(%X)", result);
    }
}


/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code
}

TASK_CODE_END
