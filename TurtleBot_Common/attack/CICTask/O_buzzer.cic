/************************************
 *
 * File : checkColor.cic
 * Date : May 18, 2022 8:57 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////
#include <Arduino.h>

// ##DEFINE_SECTION::START
// ##DEFINE_SECTION::END
#define BDPIN_BUZZER            31

TASK_CODE_BEGIN

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_buzzer;
// ##DEFINE_PORT_SECTION::END

/////////////////////////////////////
// init code
/////////////////////////////////////

TASK_INIT
{
// ##INIT_PORT_SECTION::START
    port_buzzer = PORT_INITIALIZE(TASK_ID, "buzzer");
// ##INIT_PORT_SECTION::END

// ##INIT_MULTICAST_PORT_SECTION::START
// ##INIT_MULTICAST_PORT_SECTION::END

    // TODO: task initialize code
    pinMode(BDPIN_BUZZER, OUTPUT);
}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{
    // TODO: task main code
    int dataLength;
    int buzzer = 0;
    UFPort_ReadFromQueue(port_buzzer, (unsigned char *)&buzzer, sizeof(int), 0, &dataLength);
    
    int melody[] = {  1000, 800, 600, 400, 200, 0, 1400, 1200 };
    int noteDurations[] = {  4, 8, 8, 4, 4, 4, 4, 4};
    
    for (int thisNote = 0; thisNote < 8; thisNote++) {
        int noteDuration = 1000 / noteDurations[thisNote];
        tone(BDPIN_BUZZER, melody[thisNote], noteDuration);
        
        int pauseBetweenNotes = noteDuration * 1.30;
        delay(pauseBetweenNotes);
        // stop the tone playing:
        noTone(BDPIN_BUZZER);
    }
}




/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code

}

TASK_CODE_END
